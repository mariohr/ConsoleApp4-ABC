//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference2
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IWTpBase")]
    public interface IWTpBase
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ServiceReference2.DoLoginResponse DoLogin(ServiceReference2.DoLoginRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores retornados.
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference2.DoLoginResponse> DoLoginAsync(ServiceReference2.DoLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLoginAlt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ServiceReference2.DoLoginAltResponse DoLoginAlt(ServiceReference2.DoLoginAltRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores retornados.
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLoginAlt", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference2.DoLoginAltResponse> DoLoginAltAsync(ServiceReference2.DoLoginAltRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque o namespace do wrapper (urn:WTpBase-IWTpBase) da mensagem DoLogoutRequest não corresponde ao valor padrão (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ServiceReference2.DoLogoutResponse DoLogout(ServiceReference2.DoLogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#DoLogout", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference2.DoLogoutResponse> DoLogoutAsync(ServiceReference2.DoLogoutRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque o namespace do wrapper (urn:WTpBase-IWTpBase) da mensagem CheckSessionRequest não corresponde ao valor padrão (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#CheckSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ServiceReference2.CheckSessionResponse CheckSession(ServiceReference2.CheckSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#CheckSession", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference2.CheckSessionResponse> CheckSessionAsync(ServiceReference2.CheckSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#GetServerHealth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ServiceReference2.GetServerHealthResponse GetServerHealth(ServiceReference2.GetServerHealthRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores retornados.
        [System.ServiceModel.OperationContractAttribute(Action="urn:WTpBase-IWTpBase#GetServerHealth", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference2.GetServerHealthResponse> GetServerHealthAsync(ServiceReference2.GetServerHealthRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:@:WTpBase")]
    public partial class TWRemStatus
    {
        
        private int codeField;
        
        private string msgField;
        
        /// <remarks/>
        public int Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Msg
        {
            get
            {
                return this.msgField;
            }
            set
            {
                this.msgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:@:WTpBase")]
    public partial class TWRemConfigLogin
    {
        
        private int empresaField;
        
        private int filialField;
        
        private string aliasField;
        
        private string deptoField;
        
        private string usuarioField;
        
        private string senhaField;
        
        /// <remarks/>
        public int Empresa
        {
            get
            {
                return this.empresaField;
            }
            set
            {
                this.empresaField = value;
            }
        }
        
        /// <remarks/>
        public int Filial
        {
            get
            {
                return this.filialField;
            }
            set
            {
                this.filialField = value;
            }
        }
        
        /// <remarks/>
        public string Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string Depto
        {
            get
            {
                return this.deptoField;
            }
            set
            {
                this.deptoField = value;
            }
        }
        
        /// <remarks/>
        public string Usuario
        {
            get
            {
                return this.usuarioField;
            }
            set
            {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        public string Senha
        {
            get
            {
                return this.senhaField;
            }
            set
            {
                this.senhaField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLogin", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLoginRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string Usuario;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string Senha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string TokenId;
        
        public DoLoginRequest()
        {
        }
        
        public DoLoginRequest(string Usuario, string Senha, string TokenId)
        {
            this.Usuario = Usuario;
            this.Senha = Senha;
            this.TokenId = TokenId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLoginResponse", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLoginResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string TokenId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public ServiceReference2.TWRemStatus @return;
        
        public DoLoginResponse()
        {
        }
        
        public DoLoginResponse(string TokenId, ServiceReference2.TWRemStatus @return)
        {
            this.TokenId = TokenId;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLoginAlt", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLoginAltRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public ServiceReference2.TWRemConfigLogin ACfgLogin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string TokenId;
        
        public DoLoginAltRequest()
        {
        }
        
        public DoLoginAltRequest(ServiceReference2.TWRemConfigLogin ACfgLogin, string TokenId)
        {
            this.ACfgLogin = ACfgLogin;
            this.TokenId = TokenId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLoginAltResponse", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLoginAltResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string TokenId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public ServiceReference2.TWRemStatus @return;
        
        public DoLoginAltResponse()
        {
        }
        
        public DoLoginAltResponse(string TokenId, ServiceReference2.TWRemStatus @return)
        {
            this.TokenId = TokenId;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLogout", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLogoutRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string TokenId;
        
        public DoLogoutRequest()
        {
        }
        
        public DoLogoutRequest(string TokenId)
        {
            this.TokenId = TokenId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DoLogoutResponse", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class DoLogoutResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public ServiceReference2.TWRemStatus @return;
        
        public DoLogoutResponse()
        {
        }
        
        public DoLogoutResponse(ServiceReference2.TWRemStatus @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSession", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class CheckSessionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string TokenId;
        
        public CheckSessionRequest()
        {
        }
        
        public CheckSessionRequest(string TokenId)
        {
            this.TokenId = TokenId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSessionResponse", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class CheckSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public ServiceReference2.TWRemStatus @return;
        
        public CheckSessionResponse()
        {
        }
        
        public CheckSessionResponse(ServiceReference2.TWRemStatus @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerHealth", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class GetServerHealthRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string TokenId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string jsonHealth;
        
        public GetServerHealthRequest()
        {
        }
        
        public GetServerHealthRequest(string TokenId, string jsonHealth)
        {
            this.TokenId = TokenId;
            this.jsonHealth = jsonHealth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerHealthResponse", WrapperNamespace="urn:WTpBase-IWTpBase", IsWrapped=true)]
    public partial class GetServerHealthResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string jsonHealth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public ServiceReference2.TWRemStatus @return;
        
        public GetServerHealthResponse()
        {
        }
        
        public GetServerHealthResponse(string jsonHealth, ServiceReference2.TWRemStatus @return)
        {
            this.jsonHealth = jsonHealth;
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface IWTpBaseChannel : ServiceReference2.IWTpBase, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class WTpBaseClient : System.ServiceModel.ClientBase<ServiceReference2.IWTpBase>, ServiceReference2.IWTpBase
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WTpBaseClient() : 
                base(WTpBaseClient.GetDefaultBinding(), WTpBaseClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.IWTpBasePort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WTpBaseClient(EndpointConfiguration endpointConfiguration) : 
                base(WTpBaseClient.GetBindingForEndpoint(endpointConfiguration), WTpBaseClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WTpBaseClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WTpBaseClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WTpBaseClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WTpBaseClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WTpBaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference2.DoLoginResponse ServiceReference2.IWTpBase.DoLogin(ServiceReference2.DoLoginRequest request)
        {
            return base.Channel.DoLogin(request);
        }
        
        public ServiceReference2.TWRemStatus DoLogin(string Usuario, string Senha, ref string TokenId)
        {
            ServiceReference2.DoLoginRequest inValue = new ServiceReference2.DoLoginRequest();
            inValue.Usuario = Usuario;
            inValue.Senha = Senha;
            inValue.TokenId = TokenId;
            ServiceReference2.DoLoginResponse retVal = ((ServiceReference2.IWTpBase)(this)).DoLogin(inValue);
            TokenId = retVal.TokenId;
            return retVal.@return;
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.DoLoginResponse> DoLoginAsync(ServiceReference2.DoLoginRequest request)
        {
            return base.Channel.DoLoginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference2.DoLoginAltResponse ServiceReference2.IWTpBase.DoLoginAlt(ServiceReference2.DoLoginAltRequest request)
        {
            return base.Channel.DoLoginAlt(request);
        }
        
        public ServiceReference2.TWRemStatus DoLoginAlt(ServiceReference2.TWRemConfigLogin ACfgLogin, ref string TokenId)
        {
            ServiceReference2.DoLoginAltRequest inValue = new ServiceReference2.DoLoginAltRequest();
            inValue.ACfgLogin = ACfgLogin;
            inValue.TokenId = TokenId;
            ServiceReference2.DoLoginAltResponse retVal = ((ServiceReference2.IWTpBase)(this)).DoLoginAlt(inValue);
            TokenId = retVal.TokenId;
            return retVal.@return;
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.DoLoginAltResponse> DoLoginAltAsync(ServiceReference2.DoLoginAltRequest request)
        {
            return base.Channel.DoLoginAltAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference2.DoLogoutResponse ServiceReference2.IWTpBase.DoLogout(ServiceReference2.DoLogoutRequest request)
        {
            return base.Channel.DoLogout(request);
        }
        
        public ServiceReference2.TWRemStatus DoLogout(string TokenId)
        {
            ServiceReference2.DoLogoutRequest inValue = new ServiceReference2.DoLogoutRequest();
            inValue.TokenId = TokenId;
            ServiceReference2.DoLogoutResponse retVal = ((ServiceReference2.IWTpBase)(this)).DoLogout(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference2.DoLogoutResponse> ServiceReference2.IWTpBase.DoLogoutAsync(ServiceReference2.DoLogoutRequest request)
        {
            return base.Channel.DoLogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.DoLogoutResponse> DoLogoutAsync(string TokenId)
        {
            ServiceReference2.DoLogoutRequest inValue = new ServiceReference2.DoLogoutRequest();
            inValue.TokenId = TokenId;
            return ((ServiceReference2.IWTpBase)(this)).DoLogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference2.CheckSessionResponse ServiceReference2.IWTpBase.CheckSession(ServiceReference2.CheckSessionRequest request)
        {
            return base.Channel.CheckSession(request);
        }
        
        public ServiceReference2.TWRemStatus CheckSession(string TokenId)
        {
            ServiceReference2.CheckSessionRequest inValue = new ServiceReference2.CheckSessionRequest();
            inValue.TokenId = TokenId;
            ServiceReference2.CheckSessionResponse retVal = ((ServiceReference2.IWTpBase)(this)).CheckSession(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference2.CheckSessionResponse> ServiceReference2.IWTpBase.CheckSessionAsync(ServiceReference2.CheckSessionRequest request)
        {
            return base.Channel.CheckSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.CheckSessionResponse> CheckSessionAsync(string TokenId)
        {
            ServiceReference2.CheckSessionRequest inValue = new ServiceReference2.CheckSessionRequest();
            inValue.TokenId = TokenId;
            return ((ServiceReference2.IWTpBase)(this)).CheckSessionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference2.GetServerHealthResponse ServiceReference2.IWTpBase.GetServerHealth(ServiceReference2.GetServerHealthRequest request)
        {
            return base.Channel.GetServerHealth(request);
        }
        
        public ServiceReference2.TWRemStatus GetServerHealth(string TokenId, ref string jsonHealth)
        {
            ServiceReference2.GetServerHealthRequest inValue = new ServiceReference2.GetServerHealthRequest();
            inValue.TokenId = TokenId;
            inValue.jsonHealth = jsonHealth;
            ServiceReference2.GetServerHealthResponse retVal = ((ServiceReference2.IWTpBase)(this)).GetServerHealth(inValue);
            jsonHealth = retVal.jsonHealth;
            return retVal.@return;
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.GetServerHealthResponse> GetServerHealthAsync(ServiceReference2.GetServerHealthRequest request)
        {
            return base.Channel.GetServerHealthAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IWTpBasePort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IWTpBasePort))
            {
                return new System.ServiceModel.EndpointAddress("http://sdk.erpomega.com.br:1026/soap/IWTpBase");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WTpBaseClient.GetBindingForEndpoint(EndpointConfiguration.IWTpBasePort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WTpBaseClient.GetEndpointAddress(EndpointConfiguration.IWTpBasePort);
        }
        
        public enum EndpointConfiguration
        {
            
            IWTpBasePort,
        }
    }
}
